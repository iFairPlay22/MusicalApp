import Vue from "vue";

// ######################################################################################################################### //
// ######################################################## GLOBALS ######################################################## //
// ######################################################################################################################### //

export const globals = Vue.observable({
  snacks: [],
  connected: false,
});

// ######################################################################################################################### //
// ######################################################## GETTERS ######################################################## //
// ######################################################################################################################### //

export const getters = {
  snacks: () => globals.snacks,
  isConnected: () => globals.connected,
};

// ######################################################################################################################### //
// ####################################################### MUTATIONS ####################################################### //
// ######################################################################################################################### //

export const mutations = {
  addSnack: (val) => {
    globals.snacks.push(val);
  },
  removeSnack: (val) =>
    (globals.snacks = globals.snacks.filter((value) => value != val)),
  connect: () => (globals.connected = true),
};

// ######################################################################################################################### //
// ######################################################## ACTIONS ######################################################## //
// ######################################################################################################################### //

export const actions = {};
